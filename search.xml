<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[常用易忘 Linux 命令]]></title>
    <url>%2F2019%2F08%2F23%2F%E5%B8%B8%E7%94%A8%E6%98%93%E5%BF%98%20Linux%20%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[查询硬件信息查看 CPU 相关信息1234cat /proc/cpuinfo | grep "physical id" | uniq | wc -l # 查看物理 CPU 个数cat /proc/cpuinfo | grep "cpu cores" | uniq # 查看核心数量cat /proc/cpuinfo | grep "processor" | uniq | wc -l # 查看线程数量cat /proc/cpuinfo | grep 'model name' |uniq # 查看 CPU 型号 查看 GPU 相关信息1234lspci | grep -i nvidia # 查看显卡信息lspci | grep -i vga # 查看显卡数量cat /usr/local/cuda/version.txt # 查看 CUDA 版本cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2 # 查看 cuDNN 版本 查看硬盘空间1234567df -hl # 查看磁盘剩余空间df -h # 查看每个根路径的分区大小du -sh &lt;dir_name&gt; # 返回该目录的大小du -sm &lt;dir_name&gt; # 返回该文件夹总 M 数du -h &lt;dir_name&gt; # 查看指定文件夹下的所有文件大小（包含子文件夹）ls -l | grep "^-" | wc -l # 查看文件夹中的文件数量ls -l | grep "^d" | wc -l # 查看文件夹中的一级子文件夹数量 压缩和解压缩文件压缩1234567tar -cvf jpg.tar *.jpg # 将目录里所有 jpg 文件打包成 tar.jpgtar -czf jpg.tar.gz *.jpg # 将目录里所有 jpg 文件打包并用 gzip 压缩，生成名为 jpg.tar.gz 的压缩包tar -cjf jpg.tar.bz2 *.jpg # 将目录里所有 jpg 文件打包并用 bzip2 压缩，生成名为 jpg.tar.bz2 的压缩包tar -cZf jpg.tar.Z *.jpg # 将目录里所有 jpg 文件打包并用 compress 压缩，生成名为 jpg.tar.Z 的压缩包rar a jpg.rar *.jpg # rar 格式的压缩，需要先下载 rar for Linuxzip jpg.zip *.jpg # zip 格式的压缩，需要先下载 zip for linux7za a -t7z -r jpg.7z image/* # a 表示添加文件/文件夹到压缩包，-t 指定压缩类型，默认为 7z，-r 表示递归所有的子文件夹，需要先安装 p7zip 解压1234567tar -xvf file.tar # 解压 tar 包tar -xzvf file.tar.gz # 解压 tar.gztar -xjvf file.tar.bz2 # 解压 tar.bz2tar -xZvf file.tar.Z # 解压 tar.Zunrar e file.rar # 解压 rarunzip file.zip # 解压 zip7za x file.7z -r -o./ # x 表示解压缩文件，并且是按原始目录树解压，-r 表示递归解压缩所有的子文件夹，-o 是指定解压到的目录，-o 后是没有空格的 打包12345tar -cf all.tar *.jpg # 这条命令是将所有 jpg 的文件打成一个名为 all.tar 的包。-c 是表示产生新的包，-f 指定包的文件名tar -rf all.tar *.gif # 这条命令是将所有 gif 的文件增加到 all.tar 的包里面去。-r是表示增加文件的意思tar -uf all.tar logo.gif # 这条命令是更新原来 tar 包 all.tar 中 logo.gif 文件，-u 是表示更新文件的意思tar -tf all.tar # 这条命令是列出 all.tar 包中所有文件，-t 是列出文件的意思tar -xf all.tar # 这条命令是解出 all.tar 包中所有文件，-x 是解开的意思 上传下载文件和文件夹从远程服务器下载文件1scp username@servername:/path/remote_file /path/local_dir/ 上传本地文件到远程服务器1scp /path/local_file username@servername:/path/remote_dir/ 从服务器下载文件夹1scp -r username@servername:/path/remote_dir /path/local_dir/ 上传本地文件夹到远程服务器1scp -r /path/local_dir username@servername:/path/remote_dir/ 断点续传12alias scpr="rsync -P --rsh=ssh" # 服务器端必须先安装 rsyncscpr /path/local_file username@servername:/path/remote_dir/ 安装卸载运行终止程序安装 deb 包12sudo dpkg -i *.deb # 安装 deb 软件包sudo apt-get -f -y install # 若出现缺少依赖，使用这句命令自动安装依赖项 卸载 deb 包123dpkg -l | grep &lt;filename&gt; # 模糊搜索某个已安装的 deb 包sudo dpkg -r &lt;filename&gt; # 删除软件包（保留其配置信息）sudo dpkg -P &lt;filename&gt; # 卸载软件包（不保留其配置信息） 运行 AppImage 文件12chmod a+x *.AppImage # 添加可执行权限./*.AppImage # 执行 AppImage 文件 终止程序12ps -ef | grep &lt;key_name&gt; # grep 是查找搜索命令，后面跟需要匹配的关键词kill -9 &lt;pid&gt; # 终止 pid 对应的程序]]></content>
      <categories>
        <category>Linux</category>
      </categories>
      <tags>
        <tag>linux</tag>
        <tag>shell</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[常用易忘 SQL 命令]]></title>
    <url>%2F2019%2F08%2F23%2F%E5%B8%B8%E7%94%A8%E6%98%93%E5%BF%98%20SQL%20%E5%91%BD%E4%BB%A4%2F</url>
    <content type="text"><![CDATA[删除数据库数据删除表数据123DELETE FROM table_name WHERE field_name=&lt;field_name&gt;; COMMIT; -- 删除表中某个字段所在的行DELETE FROM table_name; COMMIT; --清空表数据，可 ROLLBACK，记录索引在原来的基础上递增TRUNCATE TABLE table_name; --清空表数据，不可 ROLLBACK，记录索引递增值重置 删除表结构1DROP TABLE table_name; --删除表，不可 ROLLBACK，直接删除整个表，包括表结构 备份数据库数据备份表结构12CREATE TABLE table_name_bak LIKE table_name;INSERT INTO table_name_bak SELECT * FROM table_name;]]></content>
      <categories>
        <category>SQL</category>
      </categories>
      <tags>
        <tag>sql</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F08%2F21%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment More CustomChange themeMore info: Tutorial and the theme of NexT]]></content>
      <categories>
        <category>Web</category>
      </categories>
      <tags>
        <tag>hexo</tag>
        <tag>blog</tag>
      </tags>
  </entry>
</search>
